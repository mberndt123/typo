/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb.hardcoded.myschema.person;

import java.util.Optional;
import testdb.hardcoded.customtypes.Defaulted;
import testdb.hardcoded.myschema.Number;
import testdb.hardcoded.myschema.Sector;
import testdb.hardcoded.myschema.football_club.FootballClubId;
import testdb.hardcoded.myschema.marital_status.MaritalStatusId;

/** Table: myschema.person
  * person table
  * Primary key: id
  */
public record PersonRow(
  /** Default: auto-increment */
  PersonId id,
  /** Points to {@link testdb.hardcoded.myschema.football_club.FootballClubRow.id} */
  FootballClubId favouriteFootballClubId,
  /* max 100 chars */ String name,
  Optional</* max 30 chars */ String> nickName,
  Optional</* max 100 chars */ String> blogUrl,
  /* max 254 chars */ String email,
  /* max 8 chars */ String phone,
  Boolean likesPizza,
  /** Default: some-value
    * Points to {@link testdb.hardcoded.myschema.marital_status.MaritalStatusRow.id}
    */
  MaritalStatusId maritalStatusId,
  Optional</* max 254 chars */ String> workEmail,
  /** Default: PUBLIC */
  Sector sector,
  /** Default: one */
  Number favoriteNumber
) {
  public PersonRowUnsaved toUnsavedRow(
                                        Defaulted<PersonId> id,
                                        Defaulted<MaritalStatusId> maritalStatusId,
                                        Defaulted<Sector> sector,
                                        Defaulted<Number> favoriteNumber
                                      ) {
    return new PersonRowUnsaved(favouriteFootballClubId, name, nickName, blogUrl, email, phone, likesPizza, workEmail, id, maritalStatusId, sector, favoriteNumber);
  };
}