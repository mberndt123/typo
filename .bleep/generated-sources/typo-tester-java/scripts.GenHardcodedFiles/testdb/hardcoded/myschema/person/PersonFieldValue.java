/**
 * File automatically generated by `typo` for its own test suite.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN
 */
package testdb.hardcoded.myschema.person;

import java.util.Optional;
import testdb.hardcoded.myschema.Number;
import testdb.hardcoded.myschema.Sector;
import testdb.hardcoded.myschema.football_club.FootballClubId;
import testdb.hardcoded.myschema.marital_status.MaritalStatusId;

public sealed interface PersonFieldValue<T> {
  public record blogUrl(Optional</* max 100 chars */ String> value) implements PersonFieldValue<Optional</* max 100 chars */ String>> {
    public String name() {
      return "blog_url";
    };
  };
  public record email(/* max 254 chars */ String value) implements PersonFieldValue</* max 254 chars */ String> {
    public String name() {
      return "email";
    };
  };
  public record favoriteNumber(Number value) implements PersonFieldValue<Number> {
    public String name() {
      return "favorite_number";
    };
  };
  public record favouriteFootballClubId(FootballClubId value) implements PersonFieldValue<FootballClubId> {
    public String name() {
      return "favourite_football_club_id";
    };
  };
  public record id(PersonId value) implements PersonFieldValue<PersonId> {
    public String name() {
      return "id";
    };
  };
  public record likesPizza(Boolean value) implements PersonFieldValue<Boolean> {
    public String name() {
      return "likes_pizza";
    };
  };
  public record maritalStatusId(MaritalStatusId value) implements PersonFieldValue<MaritalStatusId> {
    public String name() {
      return "marital_status_id";
    };
  };
  public record name(/* max 100 chars */ String value) implements PersonFieldValue</* max 100 chars */ String> {
    public String name() {
      return "name";
    };
  };
  public record nickName(Optional</* max 30 chars */ String> value) implements PersonFieldValue<Optional</* max 30 chars */ String>> {
    public String name() {
      return "nick_name";
    };
  };
  public record phone(/* max 8 chars */ String value) implements PersonFieldValue</* max 8 chars */ String> {
    public String name() {
      return "phone";
    };
  };
  public record sector(Sector value) implements PersonFieldValue<Sector> {
    public String name() {
      return "sector";
    };
  };
  public record workEmail(Optional</* max 254 chars */ String> value) implements PersonFieldValue<Optional</* max 254 chars */ String>> {
    public String name() {
      return "work_email";
    };
  };
  public String name();
  public T value();
}