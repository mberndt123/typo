package typo

import typo.sc.Type.Qualified

object TypesJava {
  val BigDecimal = Qualified("java.math.BigDecimal")
  val Boolean = Qualified("java.lang.Boolean")
  val Byte = Qualified("java.lang.Byte")
  val Character = Qualified("java.lang.Character")
  val ChronoField = sc.Type.Qualified("java.time.temporal.ChronoField")
  val ChronoUnit = sc.Type.Qualified("java.time.temporal.ChronoUnit")
  val Collectors = Qualified("java.util.stream.Collectors")
  val Connection = Qualified("java.sql.Connection")
  val DateTimeFormatter = sc.Type.Qualified("java.time.format.DateTimeFormatter")
  val DateTimeFormatterBuilder = sc.Type.Qualified("java.time.format.DateTimeFormatterBuilder")
  val DateTimeParseException = Qualified("java.time.format.DateTimeParseException")
  val Double = Qualified("java.lang.Double")
  val Float = Qualified("java.lang.Float")
  val Function = Qualified("java.util.function.Function")
  val Instant = Qualified("java.time.Instant")
  val Integer = Qualified("java.lang.Integer")
  val HashMap = Qualified("java.util.HashMap")
  val List = Qualified("java.util.List")
  val LocalDate = Qualified("java.time.LocalDate")
  val LocalDateTime = Qualified("java.time.LocalDateTime")
  val LocalTime = Qualified("java.time.LocalTime")
  val Long = Qualified("java.lang.Long")
  val Map = Qualified("java.util.Map")
  val OffsetDateTime = Qualified("java.time.OffsetDateTime")
  val OffsetTime = Qualified("java.time.OffsetTime")
  val Optional = Qualified("java.util.Optional")
  val PGInterval = Qualified("org.postgresql.util.PGInterval")
  val PGbox = Qualified("org.postgresql.geometric.PGbox")
  val PGcircle = Qualified("org.postgresql.geometric.PGcircle")
  val PGline = Qualified("org.postgresql.geometric.PGline")
  val PGlseg = Qualified("org.postgresql.geometric.PGlseg")
  val PGmoney = Qualified("org.postgresql.util.PGmoney")
  val PGobject = Qualified("org.postgresql.util.PGobject")
  val PGpath = Qualified("org.postgresql.geometric.PGpath")
  val PGpoint = Qualified("org.postgresql.geometric.PGpoint")
  val PGpolygon = Qualified("org.postgresql.geometric.PGpolygon")
  val PgArray = Qualified("org.postgresql.jdbc.PgArray")
  val PgSQLXML = Qualified("org.postgresql.jdbc.PgSQLXML")
  val PreparedStatement = Qualified("java.sql.PreparedStatement")
  val ResultSet = sc.Type.Qualified("java.sql.ResultSet")
  val Short = Qualified("java.lang.Short")
  val SqlTypes = Qualified("java.sql.Types")
  val String = Qualified("java.lang.String")
  val StringBuilder = Qualified("scala.collection.mutable.StringBuilder")
  val Supplier = Qualified("java.util.function.Supplier")
  val Throwable = sc.Type.Qualified("java.lang.Throwable")
  val UUID = Qualified("java.util.UUID")
  val ZoneOffset = Qualified("java.time.ZoneOffset")
}
