"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[613],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=d(n),c=r,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||o;return n?a.createElement(k,i(i({ref:t},s),{},{components:n})):a.createElement(k,i({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7800:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const o={title:"Customizing typo"},i=void 0,l={unversionedId:"customization/overview",id:"customization/overview",title:"Customizing typo",description:"All customizations are done through the typo.Options object passed to typo:",source:"@site/docs/customization/overview.md",sourceDirName:"customization",slug:"/customization/overview",permalink:"/typo/docs/customization/overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Customizing typo"},sidebar:"tutorialSidebar",previous:{title:"Patterns: Dynamic queries",permalink:"/typo/docs/patterns/dynamic-queries"},next:{title:"Customize SQL files",permalink:"/typo/docs/customization/customize-sql-files"}},p={},d=[{value:"All options",id:"all-options",level:2},{value:"Development options",id:"development-options",level:2}],s={toc:d},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"All customizations are done through the ",(0,r.kt)("inlineCode",{parentName:"p"},"typo.Options")," object passed to typo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import typo.*\n\nval options = Options(\n  pkg = "org.foo",\n  jsonLibs = List(JsonLibName.PlayJson),\n  dbLib = Some(DbLibName.Anorm),\n  // .. more options here\n)\n\n')),(0,r.kt)("h2",{id:"all-options"},"All options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Effect"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"pkg")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the package name for the generated code.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dbLib")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines the database library to use for code generation (anorm, doobie or none).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"jsonLibs")),(0,r.kt)("td",{parentName:"tr",align:null},"JSON libraries to generate codecs for (default is empty).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"silentBanner")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls whether to suppress the Typo banner while running typo (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"fileHeader")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the header text that appears at the top of generated files.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"naming")),(0,r.kt)("td",{parentName:"tr",align:null},"Configures naming conventions for generated code. See section below")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"typeOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines type overrides for specific database types See section below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"nullabilityOverride")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines nullability overrides for specific columns See section below.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"generateMockRepos")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies which repositories to generate mock versions for (default is all).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enableFieldValue")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls whether to enable ",(0,r.kt)("inlineCode",{parentName:"td"},"FieldValue")," code generation for specific repositories (default is disabled).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enableTestInserts")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls whether to enable ",(0,r.kt)("a",{parentName:"td",href:"/typo/docs/other-features/testing-with-random-values"},"test inserts")," for specific repositories (default is none).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enableDsl")),(0,r.kt)("td",{parentName:"tr",align:null},"Enables the ",(0,r.kt)("a",{parentName:"td",href:"/typo/docs/what-is/dsl"},"SQL DSL")," for code generation (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"keepDependencies")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies whether to retain table dependencies in generated code (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),").")))),(0,r.kt)("h2",{id:"development-options"},"Development options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Effect"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"debugTypes")),(0,r.kt)("td",{parentName:"tr",align:null},"Enables debug mode for types during code generation (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"inlineImplicits")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls whether to inline implicits for generated code (default is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"logger")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the logger to use for logging during code generation (default is console logging). Useful for")))))}u.isMDXComponent=!0}}]);