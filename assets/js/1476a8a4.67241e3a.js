"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[87],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),f=i,d=u["".concat(s,".").concat(f)]||u[f]||y[f]||a;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},251:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={title:"Limitations"},o=void 0,l={unversionedId:"limitations",id:"limitations",title:"Limitations",description:"Stability",source:"@site/docs/limitations.md",sourceDirName:".",slug:"/limitations",permalink:"/typo/docs/limitations",draft:!1,tags:[],version:"current",frontMatter:{title:"Limitations"},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/typo/docs/setup"},next:{title:"Id types",permalink:"/typo/docs/type-safety/id-types"}},s={},p=[{value:"Stability",id:"stability",level:3},{value:"Correctness",id:"correctness",level:3},{value:"Nullability",id:"nullability",level:4}],c={toc:p},u="wrapper";function y(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"stability"},"Stability"),(0,i.kt)("p",null,"the interface of the generated code is not final yet. You can keep using a particular version of typo\n~forever, but if you want to upgrade to the newest version you need to expect at least some API churn."),(0,i.kt)("h3",{id:"correctness"},"Correctness"),(0,i.kt)("p",null,"Typo tries to make a guarantee that all generated code will not fail with a type error.\nYou can still break ",(0,i.kt)("a",{parentName:"p",href:"/typo/docs/other-features/constraints"},"constraints")," naturally, but the types should align."),(0,i.kt)("p",null,"Typo is close to delivering on this, but JDBC makes it ",(0,i.kt)("em",{parentName:"p"},"incredibly")," difficult to get all the details exactly right.\nIn other words, let's call it a strong tendency to get it right, for now :)"),(0,i.kt)("h4",{id:"nullability"},"Nullability"),(0,i.kt)("p",null,"In particular, nullability in columns returned by sql files and views is something which may never be ",(0,i.kt)("em",{parentName:"p"},"entirely")," right.\nThis is mainly due to postgres being inexact when inferring nullability for arbitrary sql."),(0,i.kt)("p",null,"The pgtyped project has a metaissue which collects type inference issues in postgres ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/adelsz/pgtyped/issues/375"},"here"),"."),(0,i.kt)("p",null,"Some effort has been made in typo to get a better source of nullability by looking at ",(0,i.kt)("inlineCode",{parentName:"p"},"explain")," plans,\nsee ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/oyvindberg/typo/pull/27"},"#27"),"."))}y.isMDXComponent=!0}}]);