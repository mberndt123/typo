"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7128],{5071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=n(4848),s=n(8453);const i={title:"Type flow"},r=void 0,a={id:"type-safety/type-flow",title:"Type flow",description:'Typo follows "dependencies" between PostgreSQL columns (foreign keys and view dependencies) so the',source:"@site/docs/type-safety/type-flow.md",sourceDirName:"type-safety",slug:"/type-safety/type-flow",permalink:"/typo/docs/type-safety/type-flow",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Type flow"},sidebar:"tutorialSidebar",previous:{title:"Typo types",permalink:"/typo/docs/type-safety/typo-types"},next:{title:"User-selected types",permalink:"/typo/docs/type-safety/user-selected-types"}},p={},d=[{value:"Example generated row with type flow",id:"example-generated-row-with-type-flow",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:['Typo follows "dependencies" between PostgreSQL columns (foreign keys and view dependencies) so the\nmore specific types (like ',(0,o.jsx)(t.a,{href:"/typo/docs/type-safety/id-types",children:"id types"})," and ",(0,o.jsx)(t.a,{href:"/typo/docs/type-safety/user-selected-types",children:"user-selected-types"}),') can "flow"\ndownstream from the base column to other tables which reference it.']}),"\n",(0,o.jsx)(t.p,{children:"This makes it way easier to follow these relationships when coding against the generated code."}),"\n",(0,o.jsx)(t.p,{children:"Information about the dependencies are encoded in comments in the generated code,\nlook below for things like"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-scala",children:"// Points to [[department.DepartmentRow.departmentid]]\n"})}),"\n",(0,o.jsxs)(t.p,{children:["These are by the way scaladoc links which can be ",(0,o.jsx)(t.a,{href:"/typo/docs/other-features/clickable-links",children:"ctrl-clicked"})," in intellij to go to that column."]}),"\n",(0,o.jsx)(t.h2,{id:"example-generated-row-with-type-flow",children:"Example generated row with type flow"}),"\n",(0,o.jsx)(t.p,{children:'In this example you can see that id types from other tables have "flowed" into this table\nthrough a foreign key, and you can see that the table has a composite id.'}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-scala",children:"import adventureworks.customtypes.TypoLocalDate\nimport adventureworks.customtypes.TypoLocalDateTime\nimport adventureworks.humanresources.employeedepartmenthistory.EmployeedepartmenthistoryId\nimport adventureworks.humanresources.department.DepartmentId\nimport adventureworks.humanresources.shift.ShiftId\nimport adventureworks.person.businessentity.BusinessentityId\n\ncase class EmployeedepartmenthistoryRow(\n  /** Employee identification number. Foreign key to Employee.BusinessEntityID.\n      Points to [[employee.EmployeeRow.businessentityid]] */\n  businessentityid: BusinessentityId,\n  /** Department in which the employee worked including currently. Foreign key to Department.DepartmentID.\n      Points to [[department.DepartmentRow.departmentid]] */\n  departmentid: DepartmentId,\n  /** Identifies which 8-hour shift the employee works. Foreign key to Shift.Shift.ID.\n      Points to [[shift.ShiftRow.shiftid]] */\n  shiftid: ShiftId,\n  /** Date the employee started work in the department. */\n  startdate: TypoLocalDate,\n  /** Date the employee left the department. NULL = Current department. */\n  enddate: Option[TypoLocalDate],\n  modifieddate: TypoLocalDateTime\n){\n   val compositeId: EmployeedepartmenthistoryId = EmployeedepartmenthistoryId(businessentityid, startdate, departmentid, shiftid)\n }\n\nobject EmployeedepartmenthistoryRow {\n  // ...instances\n}\n"})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);