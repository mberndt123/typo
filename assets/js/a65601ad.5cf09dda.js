"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[368],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),y=p(r),f=o,d=y["".concat(c,".").concat(f)]||y[f]||u[f]||a;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[y]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2791:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"User-selected types"},i=void 0,s={unversionedId:"type-safety/user-selected-types",id:"type-safety/user-selected-types",title:"User-selected types",description:"If you're integrating the generated code into an existing codebase it may be beneficial to reuse existing types, in particular ID types.",source:"@site/docs/type-safety/user-selected-types.md",sourceDirName:"type-safety",slug:"/type-safety/user-selected-types",permalink:"/typo/docs/type-safety/user-selected-types",draft:!1,tags:[],version:"current",frontMatter:{title:"User-selected types"},sidebar:"tutorialSidebar",previous:{title:"Type flow",permalink:"/typo/docs/type-safety/type-flow"},next:{title:"Ready for Scala.js/native",permalink:"/typo/docs/other-features/scala-js-ready"}},c={},p=[{value:"Note",id:"note",level:2}],l={toc:p},y="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(y,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you're integrating the generated code into an existing codebase it may be beneficial to reuse existing types, in particular ID types."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"/typo/docs/customization/customize-types"},"Customize column types")," typo to override types."),(0,o.kt)("h2",{id:"note"},"Note"),(0,o.kt)("p",null,"You need to implement a bunch of typeclass instances for the types you use.\nThe compiler will guide you, but it's basically everything which is needed to use the type with your database and json library."),(0,o.kt)("p",null,"You can likely copy/paste from the generated id types and adapt them."))}u.isMDXComponent=!0}}]);