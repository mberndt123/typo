"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6195],{9671:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var t=o(4848),s=o(8453);const a={title:"Customization"},i=void 0,r={id:"customization",title:"Customization",description:"All customizations are done through the typo.Options object passed to typo:",source:"@site/docs/customization.md",sourceDirName:".",slug:"/customization",permalink:"/typo/docs/customization",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Customization"}},d={},l=[{value:"Customize naming:",id:"customize-naming",level:2},{value:"Customize field names",id:"customize-field-names",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["All customizations are done through the ",(0,t.jsx)(n.code,{children:"typo.Options"})," object passed to typo:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import typo.*\n\nval options = Options(\n  pkg = "org.foo",\n  jsonLibs = List(JsonLibName.PlayJson),\n  dbLib = Some(DbLibName.Anorm)\n)\n// options: Options = Options(\n//   pkg = "org.foo",\n//   dbLib = Some(value = Anorm),\n//   jsonLibs = List(PlayJson),\n//   silentBanner = false,\n//   logger = typo.TypoLogger$Console$@1136f86c,\n//   fileHeader = """/**\n//  * File has been automatically generated by `typo`.\n//  *\n//  * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.\n//  */\n// """,\n//   naming = typo.Options$$$Lambda$2349/0x00000008013dc428@2bb3660e,\n//   typeOverride = typo.TypeOverride$$$Lambda$2347/0x0000000801399918@399bbe6e,\n//   nullabilityOverride = typo.NullabilityOverride$$$Lambda$2350/0x00000008013dcc00@6234f372,\n//   generateMockRepos = typo.Selector$$$Lambda$2352/0x00000008013dd610@44e782c0,\n//   enableFieldValue = typo.Selector$$$Lambda$2353/0x00000008013dd858@74d40f44,\n//   enableTestInserts = typo.Selector$$$Lambda$2353/0x00000008013dd858@74d40f44,\n//   enableDsl = false,\n//   debugTypes = false,\n//   inlineImplicits = true,\n//   keepDependencies = false\n// )\n'})}),"\n",(0,t.jsx)(n.h2,{id:"customize-naming",children:"Customize naming:"}),"\n",(0,t.jsxs)(n.p,{children:["You provide a ",(0,t.jsx)(n.code,{children:"typo.Naming"})," instance in ",(0,t.jsx)(n.code,{children:"typo.Options"})," when running typo.\nThis is responsible for computing all scala names based on names from postgres."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val naming = new Naming(sc.QIdent("org.foo")) {\n  override def enumName(name: db.RelationName): sc.QIdent = tpe(name, suffix = "ENUM")\n}\n// naming: Naming = repl.MdocSession$App$$anon$2@1058a77e\n\nsc.renderTree(naming.enumName(db.RelationName(Some("schema"), "foo")))\n// res0: String = "org.foo.schema.FooENUM"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"customize-field-names",children:"Customize field names"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'// say database uses `id_table` instead of `table_id`, this is how it can be reversed in scala code\nval fixIdPattern = new Naming(sc.QIdent("org.foo")) {\n  override def field(name: db.ColName): sc.Ident = {\n    val newName = if (name.value.startsWith("id_")) db.ColName(name.value.drop(3) + "_id") else name\n    super.field(newName)\n  }\n}\n// fixIdPattern: Naming = repl.MdocSession$App$$anon$5@55b27964\n\nsc.renderTree(fixIdPattern.field(db.ColName("id_flaff")))\n// res1: String = "flaffId"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var t=o(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);