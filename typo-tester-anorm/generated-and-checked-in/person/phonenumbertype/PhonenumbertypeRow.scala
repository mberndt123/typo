/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package person
package phonenumbertype

import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PhonenumbertypeRow(
  /** Primary key for telephone number type records. */
  phonenumbertypeid: PhonenumbertypeId,
  /** Name of the telephone number type */
  name: Name,
  modifieddate: LocalDateTime
)

object PhonenumbertypeRow {
  def rowParser(idx: Int): RowParser[PhonenumbertypeRow] =
    RowParser[PhonenumbertypeRow] { row =>
      Success(
        PhonenumbertypeRow(
          phonenumbertypeid = row[PhonenumbertypeId](idx + 0),
          name = row[Name](idx + 1),
          modifieddate = row[LocalDateTime](idx + 2)
        )
      )
    }
  implicit val oFormat: OFormat[PhonenumbertypeRow] = new OFormat[PhonenumbertypeRow]{
    override def writes(o: PhonenumbertypeRow): JsObject =
      Json.obj(
        "phonenumbertypeid" -> o.phonenumbertypeid,
        "name" -> o.name,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PhonenumbertypeRow] = {
      JsResult.fromTry(
        Try(
          PhonenumbertypeRow(
            phonenumbertypeid = json.\("phonenumbertypeid").as[PhonenumbertypeId],
            name = json.\("name").as[Name],
            modifieddate = json.\("modifieddate").as[LocalDateTime]
          )
        )
      )
    }
  }
}
