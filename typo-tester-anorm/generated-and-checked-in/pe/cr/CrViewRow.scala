/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package cr

import adventureworks.person.countryregion.CountryregionId
import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class CrViewRow(
  /** Points to [[person.countryregion.CountryregionRow.countryregioncode]] */
  countryregioncode: Option[CountryregionId],
  /** Points to [[person.countryregion.CountryregionRow.name]] */
  name: Option[Name],
  /** Points to [[person.countryregion.CountryregionRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object CrViewRow {
  def rowParser(idx: Int): RowParser[CrViewRow] =
    RowParser[CrViewRow] { row =>
      Success(
        CrViewRow(
          countryregioncode = row[Option[CountryregionId]](idx + 0),
          name = row[Option[Name]](idx + 1),
          modifieddate = row[Option[LocalDateTime]](idx + 2)
        )
      )
    }
  implicit val oFormat: OFormat[CrViewRow] = new OFormat[CrViewRow]{
    override def writes(o: CrViewRow): JsObject =
      Json.obj(
        "countryregioncode" -> o.countryregioncode,
        "name" -> o.name,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[CrViewRow] = {
      JsResult.fromTry(
        Try(
          CrViewRow(
            countryregioncode = json.\("countryregioncode").toOption.map(_.as[CountryregionId]),
            name = json.\("name").toOption.map(_.as[Name]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
