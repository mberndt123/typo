/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package at

import adventureworks.person.addresstype.AddresstypeId
import adventureworks.public.Name
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class AtViewRow(
  id: Option[Int],
  /** Points to [[person.addresstype.AddresstypeRow.addresstypeid]] */
  addresstypeid: Option[AddresstypeId],
  /** Points to [[person.addresstype.AddresstypeRow.name]] */
  name: Option[Name],
  /** Points to [[person.addresstype.AddresstypeRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.addresstype.AddresstypeRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object AtViewRow {
  def rowParser(idx: Int): RowParser[AtViewRow] =
    RowParser[AtViewRow] { row =>
      Success(
        AtViewRow(
          id = row[Option[Int]](idx + 0),
          addresstypeid = row[Option[AddresstypeId]](idx + 1),
          name = row[Option[Name]](idx + 2),
          rowguid = row[Option[UUID]](idx + 3),
          modifieddate = row[Option[LocalDateTime]](idx + 4)
        )
      )
    }
  implicit val oFormat: OFormat[AtViewRow] = new OFormat[AtViewRow]{
    override def writes(o: AtViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "addresstypeid" -> o.addresstypeid,
        "name" -> o.name,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[AtViewRow] = {
      JsResult.fromTry(
        Try(
          AtViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            addresstypeid = json.\("addresstypeid").toOption.map(_.as[AddresstypeId]),
            name = json.\("name").toOption.map(_.as[Name]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
