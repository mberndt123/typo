/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package pe
package pa

import adventureworks.person.businessentity.BusinessentityId
import anorm.RowParser
import anorm.Success
import java.time.LocalDateTime
import java.util.UUID
import play.api.libs.json.JsObject
import play.api.libs.json.JsResult
import play.api.libs.json.JsValue
import play.api.libs.json.Json
import play.api.libs.json.OFormat
import scala.util.Try

case class PaViewRow(
  id: Option[Int],
  /** Points to [[person.password.PasswordRow.businessentityid]] */
  businessentityid: Option[BusinessentityId],
  /** Points to [[person.password.PasswordRow.passwordhash]] */
  passwordhash: Option[/* max 128 chars */ String],
  /** Points to [[person.password.PasswordRow.passwordsalt]] */
  passwordsalt: Option[/* max 10 chars */ String],
  /** Points to [[person.password.PasswordRow.rowguid]] */
  rowguid: Option[UUID],
  /** Points to [[person.password.PasswordRow.modifieddate]] */
  modifieddate: Option[LocalDateTime]
)

object PaViewRow {
  def rowParser(idx: Int): RowParser[PaViewRow] =
    RowParser[PaViewRow] { row =>
      Success(
        PaViewRow(
          id = row[Option[Int]](idx + 0),
          businessentityid = row[Option[BusinessentityId]](idx + 1),
          passwordhash = row[Option[/* max 128 chars */ String]](idx + 2),
          passwordsalt = row[Option[/* max 10 chars */ String]](idx + 3),
          rowguid = row[Option[UUID]](idx + 4),
          modifieddate = row[Option[LocalDateTime]](idx + 5)
        )
      )
    }
  implicit val oFormat: OFormat[PaViewRow] = new OFormat[PaViewRow]{
    override def writes(o: PaViewRow): JsObject =
      Json.obj(
        "id" -> o.id,
        "businessentityid" -> o.businessentityid,
        "passwordhash" -> o.passwordhash,
        "passwordsalt" -> o.passwordsalt,
        "rowguid" -> o.rowguid,
        "modifieddate" -> o.modifieddate
      )
  
    override def reads(json: JsValue): JsResult[PaViewRow] = {
      JsResult.fromTry(
        Try(
          PaViewRow(
            id = json.\("id").toOption.map(_.as[Int]),
            businessentityid = json.\("businessentityid").toOption.map(_.as[BusinessentityId]),
            passwordhash = json.\("passwordhash").toOption.map(_.as[/* max 128 chars */ String]),
            passwordsalt = json.\("passwordsalt").toOption.map(_.as[/* max 10 chars */ String]),
            rowguid = json.\("rowguid").toOption.map(_.as[UUID]),
            modifieddate = json.\("modifieddate").toOption.map(_.as[LocalDateTime])
          )
        )
      )
    }
  }
}
