/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks
package hr
package edh

import anorm.NamedParameter
import anorm.ParameterValue
import anorm.SqlStringInterpolation
import java.sql.Connection

object EdhViewRepoImpl extends EdhViewRepo {
  override def selectAll(implicit c: Connection): List[EdhViewRow] = {
    SQL"""select "id", businessentityid, departmentid, shiftid, startdate, enddate, modifieddate
          from hr.edh
       """.as(EdhViewRow.rowParser(1).*)
  }
  override def selectByFieldValues(fieldValues: List[EdhViewFieldOrIdValue[_]])(implicit c: Connection): List[EdhViewRow] = {
    fieldValues match {
      case Nil => selectAll
      case nonEmpty =>
        val namedParams = nonEmpty.map{
          case EdhViewFieldValue.id(value) => NamedParameter("id", ParameterValue.from(value))
          case EdhViewFieldValue.businessentityid(value) => NamedParameter("businessentityid", ParameterValue.from(value))
          case EdhViewFieldValue.departmentid(value) => NamedParameter("departmentid", ParameterValue.from(value))
          case EdhViewFieldValue.shiftid(value) => NamedParameter("shiftid", ParameterValue.from(value))
          case EdhViewFieldValue.startdate(value) => NamedParameter("startdate", ParameterValue.from(value))
          case EdhViewFieldValue.enddate(value) => NamedParameter("enddate", ParameterValue.from(value))
          case EdhViewFieldValue.modifieddate(value) => NamedParameter("modifieddate", ParameterValue.from(value))
        }
        val quote = '"'.toString
        val q = s"""select "id", businessentityid, departmentid, shiftid, startdate, enddate, modifieddate
                    from hr.edh
                    where ${namedParams.map(x => s"$quote${x.name}$quote = {${x.name}}").mkString(" AND ")}
                 """
        // this line is here to include an extension method which is only needed for scala 3. no import is emitted for `SQL` to avoid warning for scala 2
        import anorm._
        SQL(q)
          .on(namedParams: _*)
          .as(EdhViewRow.rowParser(1).*)
    }
  
  }
}
