/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.humanresources.vjobcandidateeducation

import adventureworks.customtypes.TypoLocalDate
import adventureworks.humanresources.jobcandidate.JobcandidateId
import typo.dsl.Path
import typo.dsl.SqlExpr.Field
import typo.dsl.SqlExpr.FieldLikeNoHkt
import typo.dsl.SqlExpr.OptField
import typo.dsl.Structure.Relation

trait VjobcandidateeducationViewFields {
  def jobcandidateid: Field[JobcandidateId, VjobcandidateeducationViewRow]
  def eduLevel: OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow]
  def eduStartDate: OptField[TypoLocalDate, VjobcandidateeducationViewRow]
  def eduEndDate: OptField[TypoLocalDate, VjobcandidateeducationViewRow]
  def eduDegree: OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow]
  def eduMajor: OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow]
  def eduMinor: OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow]
  def eduGPA: OptField[/* max 5 chars */ String, VjobcandidateeducationViewRow]
  def eduGPAScale: OptField[/* max 5 chars */ String, VjobcandidateeducationViewRow]
  def eduSchool: OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow]
  def eduLocCountryRegion: OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow]
  def eduLocState: OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow]
  def eduLocCity: OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow]
}

object VjobcandidateeducationViewFields {
  lazy val structure: Relation[VjobcandidateeducationViewFields, VjobcandidateeducationViewRow] =
    new Impl(Nil)

  private final class Impl(val _path: List[Path])
    extends Relation[VjobcandidateeducationViewFields, VjobcandidateeducationViewRow] {
  
    override lazy val fields: VjobcandidateeducationViewFields = new VjobcandidateeducationViewFields {
      override def jobcandidateid = Field[JobcandidateId, VjobcandidateeducationViewRow](_path, "jobcandidateid", None, None, x => x.jobcandidateid, (row, value) => row.copy(jobcandidateid = value))
      override def eduLevel = OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Level", None, None, x => x.eduLevel, (row, value) => row.copy(eduLevel = value))
      override def eduStartDate = OptField[TypoLocalDate, VjobcandidateeducationViewRow](_path, "Edu.StartDate", Some("text"), None, x => x.eduStartDate, (row, value) => row.copy(eduStartDate = value))
      override def eduEndDate = OptField[TypoLocalDate, VjobcandidateeducationViewRow](_path, "Edu.EndDate", Some("text"), None, x => x.eduEndDate, (row, value) => row.copy(eduEndDate = value))
      override def eduDegree = OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Degree", None, None, x => x.eduDegree, (row, value) => row.copy(eduDegree = value))
      override def eduMajor = OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Major", None, None, x => x.eduMajor, (row, value) => row.copy(eduMajor = value))
      override def eduMinor = OptField[/* max 50 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Minor", None, None, x => x.eduMinor, (row, value) => row.copy(eduMinor = value))
      override def eduGPA = OptField[/* max 5 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.GPA", None, None, x => x.eduGPA, (row, value) => row.copy(eduGPA = value))
      override def eduGPAScale = OptField[/* max 5 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.GPAScale", None, None, x => x.eduGPAScale, (row, value) => row.copy(eduGPAScale = value))
      override def eduSchool = OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.School", None, None, x => x.eduSchool, (row, value) => row.copy(eduSchool = value))
      override def eduLocCountryRegion = OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Loc.CountryRegion", None, None, x => x.eduLocCountryRegion, (row, value) => row.copy(eduLocCountryRegion = value))
      override def eduLocState = OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Loc.State", None, None, x => x.eduLocState, (row, value) => row.copy(eduLocState = value))
      override def eduLocCity = OptField[/* max 100 chars */ String, VjobcandidateeducationViewRow](_path, "Edu.Loc.City", None, None, x => x.eduLocCity, (row, value) => row.copy(eduLocCity = value))
    }
  
    override lazy val columns: List[FieldLikeNoHkt[?, VjobcandidateeducationViewRow]] =
      List[FieldLikeNoHkt[?, VjobcandidateeducationViewRow]](fields.jobcandidateid, fields.eduLevel, fields.eduStartDate, fields.eduEndDate, fields.eduDegree, fields.eduMajor, fields.eduMinor, fields.eduGPA, fields.eduGPAScale, fields.eduSchool, fields.eduLocCountryRegion, fields.eduLocState, fields.eduLocCity)
  
    override def copy(path: List[Path]): Impl =
      new Impl(path)
  }
  
}
