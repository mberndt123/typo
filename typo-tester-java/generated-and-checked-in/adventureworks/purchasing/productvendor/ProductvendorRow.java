/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.purchasing.productvendor;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.person.businessentity.BusinessentityId;
import adventureworks.production.product.ProductId;
import adventureworks.production.unitmeasure.UnitmeasureId;
import java.math.BigDecimal;
import java.util.Optional;

/** Table: purchasing.productvendor
  * Cross-reference table mapping vendors with the products they supply.
  * Composite primary key: productid, businessentityid
  */
public record ProductvendorRow(
  /** Primary key. Foreign key to Product.ProductID.
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Primary key. Foreign key to Vendor.BusinessEntityID.
    * Points to {@link adventureworks.purchasing.vendor.VendorRow.businessentityid}
    */
  BusinessentityId businessentityid,
  /** The average span of time (in days) between placing an order with the vendor and receiving the purchased product.
    * Constraint CK_ProductVendor_AverageLeadTime affecting columns averageleadtime: ((averageleadtime >= 1))
    */
  Integer averageleadtime,
  /** The vendor's usual selling price.
    * Constraint CK_ProductVendor_StandardPrice affecting columns standardprice: ((standardprice > 0.00))
    */
  BigDecimal standardprice,
  /** The selling price when last purchased.
    * Constraint CK_ProductVendor_LastReceiptCost affecting columns lastreceiptcost: ((lastreceiptcost > 0.00))
    */
  Optional<BigDecimal> lastreceiptcost,
  /** Date the product was last received by the vendor. */
  Optional<TypoLocalDateTime> lastreceiptdate,
  /** The maximum quantity that should be ordered.
    * Constraint CK_ProductVendor_MinOrderQty affecting columns minorderqty: ((minorderqty >= 1))
    */
  Integer minorderqty,
  /** The minimum quantity that should be ordered.
    * Constraint CK_ProductVendor_MaxOrderQty affecting columns maxorderqty: ((maxorderqty >= 1))
    */
  Integer maxorderqty,
  /** The quantity currently on order.
    * Constraint CK_ProductVendor_OnOrderQty affecting columns onorderqty: ((onorderqty >= 0))
    */
  Optional<Integer> onorderqty,
  /** The product's unit of measure.
    * Points to {@link adventureworks.production.unitmeasure.UnitmeasureRow.unitmeasurecode}
    */
  UnitmeasureId unitmeasurecode,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  static public ProductvendorRow apply(
                                        ProductvendorId compositeId,
                                        Integer averageleadtime,
                                        BigDecimal standardprice,
                                        Optional<BigDecimal> lastreceiptcost,
                                        Optional<TypoLocalDateTime> lastreceiptdate,
                                        Integer minorderqty,
                                        Integer maxorderqty,
                                        Optional<Integer> onorderqty,
                                        UnitmeasureId unitmeasurecode,
                                        TypoLocalDateTime modifieddate
                                      ) {
           return new ProductvendorRow(compositeId.productid(), compositeId.businessentityid(), averageleadtime, standardprice, lastreceiptcost, lastreceiptdate, minorderqty, maxorderqty, onorderqty, unitmeasurecode, modifieddate);
         };
  public ProductvendorId compositeId() {
    return new ProductvendorId(productid, businessentityid);
  };
  public ProductvendorId id() {
    return compositeId();
  };
  public ProductvendorRowUnsaved toUnsavedRow(Defaulted<TypoLocalDateTime> modifieddate) {
    return new ProductvendorRowUnsaved(productid, businessentityid, averageleadtime, standardprice, lastreceiptcost, lastreceiptdate, minorderqty, maxorderqty, onorderqty, unitmeasurecode, modifieddate);
  };
}