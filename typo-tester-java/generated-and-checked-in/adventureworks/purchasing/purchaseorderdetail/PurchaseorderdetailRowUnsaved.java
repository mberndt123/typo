/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.purchasing.purchaseorderdetail;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.production.product.ProductId;
import adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderId;
import java.math.BigDecimal;

/** This class corresponds to a row in table `purchasing.purchaseorderdetail` which has not been persisted yet */
public record PurchaseorderdetailRowUnsaved(
  /** Primary key. Foreign key to PurchaseOrderHeader.PurchaseOrderID.
    * Points to {@link adventureworks.purchasing.purchaseorderheader.PurchaseorderheaderRow.purchaseorderid}
    */
  PurchaseorderheaderId purchaseorderid,
  /** Date the product is expected to be received. */
  TypoLocalDateTime duedate,
  /** Quantity ordered.
    * Constraint CK_PurchaseOrderDetail_OrderQty affecting columns orderqty:  ((orderqty > 0))
    */
  TypoShort orderqty,
  /** Product identification number. Foreign key to Product.ProductID.
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Vendor's selling price of a single product.
    * Constraint CK_PurchaseOrderDetail_UnitPrice affecting columns unitprice:  ((unitprice >= 0.00))
    */
  BigDecimal unitprice,
  /** Quantity actually received from the vendor.
    * Constraint CK_PurchaseOrderDetail_ReceivedQty affecting columns receivedqty:  ((receivedqty >= 0.00))
    */
  BigDecimal receivedqty,
  /** Quantity rejected during inspection.
    * Constraint CK_PurchaseOrderDetail_RejectedQty affecting columns rejectedqty:  ((rejectedqty >= 0.00))
    */
  BigDecimal rejectedqty,
  /** Default: nextval('purchasing.purchaseorderdetail_purchaseorderdetailid_seq'::regclass)
    * Primary key. One line number per purchased product.
    */
  Defaulted<Integer> purchaseorderdetailid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public PurchaseorderdetailRow toRow(java.util.function.Supplier<Integer> purchaseorderdetailidDefault, java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault) {
    return new PurchaseorderdetailRow(purchaseorderid, purchaseorderdetailid.getOrElse(purchaseorderdetailidDefault), duedate, orderqty, productid, unitprice, receivedqty, rejectedqty, modifieddate.getOrElse(modifieddateDefault));
  };
}