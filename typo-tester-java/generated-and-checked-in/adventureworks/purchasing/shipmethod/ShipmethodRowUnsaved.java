/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.purchasing.shipmethod;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoUUID;
import adventureworks.public_.Name;
import java.math.BigDecimal;

/** This class corresponds to a row in table `purchasing.shipmethod` which has not been persisted yet */
public record ShipmethodRowUnsaved(
  /** Shipping company name. */
  Name name,
  /** Default: nextval('purchasing.shipmethod_shipmethodid_seq'::regclass)
    * Primary key for ShipMethod records.
    */
  Defaulted<ShipmethodId> shipmethodid,
  /** Default: 0.00
    * Minimum shipping charge.
    * Constraint CK_ShipMethod_ShipBase affecting columns shipbase:  ((shipbase > 0.00))
    */
  Defaulted<BigDecimal> shipbase,
  /** Default: 0.00
    * Shipping charge per pound.
    * Constraint CK_ShipMethod_ShipRate affecting columns shiprate:  ((shiprate > 0.00))
    */
  Defaulted<BigDecimal> shiprate,
  /** Default: uuid_generate_v1() */
  Defaulted<TypoUUID> rowguid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public ShipmethodRow toRow(
                              java.util.function.Supplier<ShipmethodId> shipmethodidDefault,
                              java.util.function.Supplier<BigDecimal> shipbaseDefault,
                              java.util.function.Supplier<BigDecimal> shiprateDefault,
                              java.util.function.Supplier<TypoUUID> rowguidDefault,
                              java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                            ) {
    return new ShipmethodRow(shipmethodid.getOrElse(shipmethodidDefault), name, shipbase.getOrElse(shipbaseDefault), shiprate.getOrElse(shiprateDefault), rowguid.getOrElse(rowguidDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}