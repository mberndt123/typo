/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.person.businessentitycontact;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoUUID;
import adventureworks.person.businessentity.BusinessentityId;
import adventureworks.person.contacttype.ContacttypeId;

/** Table: person.businessentitycontact
  * Cross-reference table mapping stores, vendors, and employees to people
  * Composite primary key: businessentityid, personid, contacttypeid
  */
public record BusinessentitycontactRow(
  /** Primary key. Foreign key to BusinessEntity.BusinessEntityID.
    * Points to {@link adventureworks.person.businessentity.BusinessentityRow.businessentityid}
    */
  BusinessentityId businessentityid,
  /** Primary key. Foreign key to Person.BusinessEntityID.
    * Points to {@link adventureworks.person.person.PersonRow.businessentityid}
    */
  BusinessentityId personid,
  /** Primary key.  Foreign key to ContactType.ContactTypeID.
    * Points to {@link adventureworks.person.contacttype.ContacttypeRow.contacttypeid}
    */
  ContacttypeId contacttypeid,
  /** Default: uuid_generate_v1() */
  TypoUUID rowguid,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  static public BusinessentitycontactRow apply(
                                                BusinessentitycontactId compositeId,
                                                TypoUUID rowguid,
                                                TypoLocalDateTime modifieddate
                                              ) {
           return new BusinessentitycontactRow(compositeId.businessentityid(), compositeId.personid(), compositeId.contacttypeid(), rowguid, modifieddate);
         };
  public BusinessentitycontactId compositeId() {
    return new BusinessentitycontactId(businessentityid, personid, contacttypeid);
  };
  public BusinessentitycontactId id() {
    return compositeId();
  };
  public BusinessentitycontactRowUnsaved toUnsavedRow(Defaulted<TypoUUID> rowguid, Defaulted<TypoLocalDateTime> modifieddate) {
    return new BusinessentitycontactRowUnsaved(businessentityid, personid, contacttypeid, rowguid, modifieddate);
  };
}