/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.person.address;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoBytea;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoUUID;
import adventureworks.person.stateprovince.StateprovinceId;
import java.util.Optional;

/** This class corresponds to a row in table `person.address` which has not been persisted yet */
public record AddressRowUnsaved(
  /** First street address line. */
  /* max 60 chars */ String addressline1,
  /** Second street address line. */
  Optional</* max 60 chars */ String> addressline2,
  /** Name of the city. */
  /* max 30 chars */ String city,
  /** Unique identification number for the state or province. Foreign key to StateProvince table.
    * Points to {@link adventureworks.person.stateprovince.StateprovinceRow.stateprovinceid}
    */
  StateprovinceId stateprovinceid,
  /** Postal code for the street address. */
  /* max 15 chars */ String postalcode,
  /** Latitude and longitude of this address. */
  Optional<TypoBytea> spatiallocation,
  /** Default: nextval('person.address_addressid_seq'::regclass)
    * Primary key for Address records.
    */
  Defaulted<AddressId> addressid,
  /** Default: uuid_generate_v1() */
  Defaulted<TypoUUID> rowguid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public AddressRow toRow(
                           java.util.function.Supplier<AddressId> addressidDefault,
                           java.util.function.Supplier<TypoUUID> rowguidDefault,
                           java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                         ) {
    return new AddressRow(addressid.getOrElse(addressidDefault), addressline1, addressline2, city, stateprovinceid, postalcode, spatiallocation, rowguid.getOrElse(rowguidDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}