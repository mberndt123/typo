/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.production.productcosthistory;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.production.product.ProductId;
import java.math.BigDecimal;
import java.util.Optional;

/** This class corresponds to a row in table `production.productcosthistory` which has not been persisted yet */
public record ProductcosthistoryRowUnsaved(
  /** Product identification number. Foreign key to Product.ProductID
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Product cost start date.
    * Constraint CK_ProductCostHistory_EndDate affecting columns enddate, startdate:  (((enddate >= startdate) OR (enddate IS NULL)))
    */
  TypoLocalDateTime startdate,
  /** Product cost end date.
    * Constraint CK_ProductCostHistory_EndDate affecting columns enddate, startdate:  (((enddate >= startdate) OR (enddate IS NULL)))
    */
  Optional<TypoLocalDateTime> enddate,
  /** Standard cost of the product.
    * Constraint CK_ProductCostHistory_StandardCost affecting columns standardcost:  ((standardcost >= 0.00))
    */
  BigDecimal standardcost,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public ProductcosthistoryRow toRow(java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault) {
    return new ProductcosthistoryRow(productid, startdate, enddate, standardcost, modifieddate.getOrElse(modifieddateDefault));
  };
}