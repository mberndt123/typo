/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.production.productinventory;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.customtypes.TypoUUID;
import adventureworks.production.location.LocationId;
import adventureworks.production.product.ProductId;

/** This class corresponds to a row in table `production.productinventory` which has not been persisted yet */
public record ProductinventoryRowUnsaved(
  /** Product identification number. Foreign key to Product.ProductID.
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Inventory location identification number. Foreign key to Location.LocationID.
    * Points to {@link adventureworks.production.location.LocationRow.locationid}
    */
  LocationId locationid,
  /** Storage compartment within an inventory location. */
  /* max 10 chars */ String shelf,
  /** Storage container on a shelf in an inventory location.
    * Constraint CK_ProductInventory_Bin affecting columns bin:  (((bin >= 0) AND (bin <= 100)))
    */
  TypoShort bin,
  /** Default: 0
    * Quantity of products in the inventory location.
    */
  Defaulted<TypoShort> quantity,
  /** Default: uuid_generate_v1() */
  Defaulted<TypoUUID> rowguid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public ProductinventoryRow toRow(
                                    java.util.function.Supplier<TypoShort> quantityDefault,
                                    java.util.function.Supplier<TypoUUID> rowguidDefault,
                                    java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                                  ) {
    return new ProductinventoryRow(productid, locationid, shelf, bin, quantity.getOrElse(quantityDefault), rowguid.getOrElse(rowguidDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}