/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.production.productinventory;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.customtypes.TypoUUID;
import adventureworks.production.location.LocationId;
import adventureworks.production.product.ProductId;

/** Table: production.productinventory
  * Product inventory information.
  * Composite primary key: productid, locationid
  */
public record ProductinventoryRow(
  /** Product identification number. Foreign key to Product.ProductID.
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Inventory location identification number. Foreign key to Location.LocationID.
    * Points to {@link adventureworks.production.location.LocationRow.locationid}
    */
  LocationId locationid,
  /** Storage compartment within an inventory location. */
  /* max 10 chars */ String shelf,
  /** Storage container on a shelf in an inventory location.
    * Constraint CK_ProductInventory_Bin affecting columns bin: (((bin >= 0) AND (bin <= 100)))
    */
  TypoShort bin,
  /** Quantity of products in the inventory location.
    * Default: 0
    */
  TypoShort quantity,
  /** Default: uuid_generate_v1() */
  TypoUUID rowguid,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  static public ProductinventoryRow apply(
                                           ProductinventoryId compositeId,
                                           /* max 10 chars */ String shelf,
                                           TypoShort bin,
                                           TypoShort quantity,
                                           TypoUUID rowguid,
                                           TypoLocalDateTime modifieddate
                                         ) {
           return new ProductinventoryRow(compositeId.productid(), compositeId.locationid(), shelf, bin, quantity, rowguid, modifieddate);
         };
  public ProductinventoryId compositeId() {
    return new ProductinventoryId(productid, locationid);
  };
  public ProductinventoryId id() {
    return compositeId();
  };
  public ProductinventoryRowUnsaved toUnsavedRow(
                                                  Defaulted<TypoShort> quantity,
                                                  Defaulted<TypoUUID> rowguid,
                                                  Defaulted<TypoLocalDateTime> modifieddate
                                                ) {
    return new ProductinventoryRowUnsaved(productid, locationid, shelf, bin, quantity, rowguid, modifieddate);
  };
}