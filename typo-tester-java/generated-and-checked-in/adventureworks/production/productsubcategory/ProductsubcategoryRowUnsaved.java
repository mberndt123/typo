/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.production.productsubcategory;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoUUID;
import adventureworks.production.productcategory.ProductcategoryId;
import adventureworks.public_.Name;

/** This class corresponds to a row in table `production.productsubcategory` which has not been persisted yet */
public record ProductsubcategoryRowUnsaved(
  /** Product category identification number. Foreign key to ProductCategory.ProductCategoryID.
    * Points to {@link adventureworks.production.productcategory.ProductcategoryRow.productcategoryid}
    */
  ProductcategoryId productcategoryid,
  /** Subcategory description. */
  Name name,
  /** Default: nextval('production.productsubcategory_productsubcategoryid_seq'::regclass)
    * Primary key for ProductSubcategory records.
    */
  Defaulted<ProductsubcategoryId> productsubcategoryid,
  /** Default: uuid_generate_v1() */
  Defaulted<TypoUUID> rowguid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public ProductsubcategoryRow toRow(
                                      java.util.function.Supplier<ProductsubcategoryId> productsubcategoryidDefault,
                                      java.util.function.Supplier<TypoUUID> rowguidDefault,
                                      java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                                    ) {
    return new ProductsubcategoryRow(productsubcategoryid.getOrElse(productsubcategoryidDefault), productcategoryid, name, rowguid.getOrElse(rowguidDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}