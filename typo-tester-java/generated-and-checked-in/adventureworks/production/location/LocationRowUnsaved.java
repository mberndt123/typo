/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.production.location;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.public_.Name;
import java.math.BigDecimal;

/** This class corresponds to a row in table `production.location` which has not been persisted yet */
public record LocationRowUnsaved(
  /** Location description. */
  Name name,
  /** Default: nextval('production.location_locationid_seq'::regclass)
    * Primary key for Location records.
    */
  Defaulted<LocationId> locationid,
  /** Default: 0.00
    * Standard hourly cost of the manufacturing location.
    * Constraint CK_Location_CostRate affecting columns costrate:  ((costrate >= 0.00))
    */
  Defaulted<BigDecimal> costrate,
  /** Default: 0.00
    * Work capacity (in hours) of the manufacturing location.
    * Constraint CK_Location_Availability affecting columns availability:  ((availability >= 0.00))
    */
  Defaulted<BigDecimal> availability,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public LocationRow toRow(
                            java.util.function.Supplier<LocationId> locationidDefault,
                            java.util.function.Supplier<BigDecimal> costrateDefault,
                            java.util.function.Supplier<BigDecimal> availabilityDefault,
                            java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                          ) {
    return new LocationRow(locationid.getOrElse(locationidDefault), name, costrate.getOrElse(costrateDefault), availability.getOrElse(availabilityDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}