/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.humanresources.employeepayhistory;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.person.businessentity.BusinessentityId;
import java.math.BigDecimal;

/** Table: humanresources.employeepayhistory
  * Employee pay history.
  * Composite primary key: businessentityid, ratechangedate
  */
public record EmployeepayhistoryRow(
  /** Employee identification number. Foreign key to Employee.BusinessEntityID.
    * Points to {@link adventureworks.humanresources.employee.EmployeeRow.businessentityid}
    */
  BusinessentityId businessentityid,
  /** Date the change in pay is effective */
  TypoLocalDateTime ratechangedate,
  /** Salary hourly rate.
    * Constraint CK_EmployeePayHistory_Rate affecting columns rate: (((rate >= 6.50) AND (rate <= 200.00)))
    */
  BigDecimal rate,
  /** 1 = Salary received monthly, 2 = Salary received biweekly
    * Constraint CK_EmployeePayHistory_PayFrequency affecting columns payfrequency: ((payfrequency = ANY (ARRAY[1, 2])))
    */
  TypoShort payfrequency,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  static public EmployeepayhistoryRow apply(
                                             EmployeepayhistoryId compositeId,
                                             BigDecimal rate,
                                             TypoShort payfrequency,
                                             TypoLocalDateTime modifieddate
                                           ) {
           return new EmployeepayhistoryRow(compositeId.businessentityid(), compositeId.ratechangedate(), rate, payfrequency, modifieddate);
         };
  public EmployeepayhistoryId compositeId() {
    return new EmployeepayhistoryId(businessentityid, ratechangedate);
  };
  public EmployeepayhistoryId id() {
    return compositeId();
  };
  public EmployeepayhistoryRowUnsaved toUnsavedRow(Defaulted<TypoLocalDateTime> modifieddate) {
    return new EmployeepayhistoryRowUnsaved(businessentityid, ratechangedate, rate, payfrequency, modifieddate);
  };
}