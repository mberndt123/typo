/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.sales.salesorderheader;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.customtypes.TypoUUID;
import adventureworks.person.address.AddressId;
import adventureworks.person.businessentity.BusinessentityId;
import adventureworks.public_.AccountNumber;
import adventureworks.public_.Flag;
import adventureworks.public_.OrderNumber;
import adventureworks.purchasing.shipmethod.ShipmethodId;
import adventureworks.sales.currencyrate.CurrencyrateId;
import adventureworks.sales.customer.CustomerId;
import adventureworks.sales.salesterritory.SalesterritoryId;
import adventureworks.userdefined.CustomCreditcardId;
import java.math.BigDecimal;
import java.util.Optional;

/** Table: sales.salesorderheader
  * General sales order information.
  * Primary key: salesorderid
  */
public record SalesorderheaderRow(
  /** Primary key.
    * Default: nextval('sales.salesorderheader_salesorderid_seq'::regclass)
    */
  SalesorderheaderId salesorderid,
  /** Incremental number to track changes to the sales order over time.
    * Default: 0
    */
  TypoShort revisionnumber,
  /** Dates the sales order was created.
    * Default: now()
    * Constraint CK_SalesOrderHeader_DueDate affecting columns duedate, orderdate: ((duedate >= orderdate))
    * Constraint CK_SalesOrderHeader_ShipDate affecting columns orderdate, shipdate: (((shipdate >= orderdate) OR (shipdate IS NULL)))
    */
  TypoLocalDateTime orderdate,
  /** Date the order is due to the customer.
    * Constraint CK_SalesOrderHeader_DueDate affecting columns duedate, orderdate: ((duedate >= orderdate))
    */
  TypoLocalDateTime duedate,
  /** Date the order was shipped to the customer.
    * Constraint CK_SalesOrderHeader_ShipDate affecting columns orderdate, shipdate: (((shipdate >= orderdate) OR (shipdate IS NULL)))
    */
  Optional<TypoLocalDateTime> shipdate,
  /** Order current status. 1 = In process; 2 = Approved; 3 = Backordered; 4 = Rejected; 5 = Shipped; 6 = Cancelled
    * Default: 1
    * Constraint CK_SalesOrderHeader_Status affecting columns status: (((status >= 0) AND (status <= 8)))
    */
  TypoShort status,
  /** 0 = Order placed by sales person. 1 = Order placed online by customer.
    * Default: true
    */
  Flag onlineorderflag,
  /** Customer purchase order number reference. */
  Optional<OrderNumber> purchaseordernumber,
  /** Financial accounting number reference. */
  Optional<AccountNumber> accountnumber,
  /** Customer identification number. Foreign key to Customer.BusinessEntityID.
    * Points to {@link adventureworks.sales.customer.CustomerRow.customerid}
    */
  CustomerId customerid,
  /** Sales person who created the sales order. Foreign key to SalesPerson.BusinessEntityID.
    * Points to {@link adventureworks.sales.salesperson.SalespersonRow.businessentityid}
    */
  Optional<BusinessentityId> salespersonid,
  /** Territory in which the sale was made. Foreign key to SalesTerritory.SalesTerritoryID.
    * Points to {@link adventureworks.sales.salesterritory.SalesterritoryRow.territoryid}
    */
  Optional<SalesterritoryId> territoryid,
  /** Customer billing address. Foreign key to Address.AddressID.
    * Points to {@link adventureworks.person.address.AddressRow.addressid}
    */
  AddressId billtoaddressid,
  /** Customer shipping address. Foreign key to Address.AddressID.
    * Points to {@link adventureworks.person.address.AddressRow.addressid}
    */
  AddressId shiptoaddressid,
  /** Shipping method. Foreign key to ShipMethod.ShipMethodID.
    * Points to {@link adventureworks.purchasing.shipmethod.ShipmethodRow.shipmethodid}
    */
  ShipmethodId shipmethodid,
  /** Credit card identification number. Foreign key to CreditCard.CreditCardID.
    * Points to {@link adventureworks.sales.creditcard.CreditcardRow.creditcardid}
    */
  Optional</* user-picked */ CustomCreditcardId> creditcardid,
  /** Approval code provided by the credit card company. */
  Optional</* max 15 chars */ String> creditcardapprovalcode,
  /** Currency exchange rate used. Foreign key to CurrencyRate.CurrencyRateID.
    * Points to {@link adventureworks.sales.currencyrate.CurrencyrateRow.currencyrateid}
    */
  Optional<CurrencyrateId> currencyrateid,
  /** Sales subtotal. Computed as SUM(SalesOrderDetail.LineTotal)for the appropriate SalesOrderID.
    * Default: 0.00
    * Constraint CK_SalesOrderHeader_SubTotal affecting columns subtotal: ((subtotal >= 0.00))
    */
  BigDecimal subtotal,
  /** Tax amount.
    * Default: 0.00
    * Constraint CK_SalesOrderHeader_TaxAmt affecting columns taxamt: ((taxamt >= 0.00))
    */
  BigDecimal taxamt,
  /** Shipping cost.
    * Default: 0.00
    * Constraint CK_SalesOrderHeader_Freight affecting columns freight: ((freight >= 0.00))
    */
  BigDecimal freight,
  /** Total due from customer. Computed as Subtotal + TaxAmt + Freight. */
  Optional<BigDecimal> totaldue,
  /** Sales representative comments. */
  Optional</* max 128 chars */ String> comment,
  /** Default: uuid_generate_v1() */
  TypoUUID rowguid,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  public SalesorderheaderId id() {
    return salesorderid;
  };
  public SalesorderheaderRowUnsaved toUnsavedRow(
                                                  Defaulted<SalesorderheaderId> salesorderid,
                                                  Defaulted<TypoShort> revisionnumber,
                                                  Defaulted<TypoLocalDateTime> orderdate,
                                                  Defaulted<TypoShort> status,
                                                  Defaulted<Flag> onlineorderflag,
                                                  Defaulted<BigDecimal> subtotal,
                                                  Defaulted<BigDecimal> taxamt,
                                                  Defaulted<BigDecimal> freight,
                                                  Defaulted<TypoUUID> rowguid,
                                                  Defaulted<TypoLocalDateTime> modifieddate
                                                ) {
    return new SalesorderheaderRowUnsaved(duedate, shipdate, purchaseordernumber, accountnumber, customerid, salespersonid, territoryid, billtoaddressid, shiptoaddressid, shipmethodid, creditcardid, creditcardapprovalcode, currencyrateid, totaldue, comment, salesorderid, revisionnumber, orderdate, status, onlineorderflag, subtotal, taxamt, freight, rowguid, modifieddate);
  };
}