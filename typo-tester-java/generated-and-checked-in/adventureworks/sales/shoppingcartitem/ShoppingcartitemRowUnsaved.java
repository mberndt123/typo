/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.sales.shoppingcartitem;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.production.product.ProductId;

/** This class corresponds to a row in table `sales.shoppingcartitem` which has not been persisted yet */
public record ShoppingcartitemRowUnsaved(
  /** Shopping cart identification number. */
  /* max 50 chars */ String shoppingcartid,
  /** Product ordered. Foreign key to Product.ProductID.
    * Points to {@link adventureworks.production.product.ProductRow.productid}
    */
  ProductId productid,
  /** Default: nextval('sales.shoppingcartitem_shoppingcartitemid_seq'::regclass)
    * Primary key for ShoppingCartItem records.
    */
  Defaulted<ShoppingcartitemId> shoppingcartitemid,
  /** Default: 1
    * Product quantity ordered.
    * Constraint CK_ShoppingCartItem_Quantity affecting columns quantity:  ((quantity >= 1))
    */
  Defaulted<Integer> quantity,
  /** Default: now()
    * Date the time the record was created.
    */
  Defaulted<TypoLocalDateTime> datecreated,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public ShoppingcartitemRow toRow(
                                    java.util.function.Supplier<ShoppingcartitemId> shoppingcartitemidDefault,
                                    java.util.function.Supplier<Integer> quantityDefault,
                                    java.util.function.Supplier<TypoLocalDateTime> datecreatedDefault,
                                    java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                                  ) {
    return new ShoppingcartitemRow(shoppingcartitemid.getOrElse(shoppingcartitemidDefault), shoppingcartid, quantity.getOrElse(quantityDefault), productid, datecreated.getOrElse(datecreatedDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}