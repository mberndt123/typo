/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.sales.salestaxrate;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.customtypes.TypoShort;
import adventureworks.customtypes.TypoUUID;
import adventureworks.person.stateprovince.StateprovinceId;
import adventureworks.public_.Name;
import java.math.BigDecimal;

/** This class corresponds to a row in table `sales.salestaxrate` which has not been persisted yet */
public record SalestaxrateRowUnsaved(
  /** State, province, or country/region the sales tax applies to.
    * Points to {@link adventureworks.person.stateprovince.StateprovinceRow.stateprovinceid}
    */
  StateprovinceId stateprovinceid,
  /** 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions.
    * Constraint CK_SalesTaxRate_TaxType affecting columns taxtype:  (((taxtype >= 1) AND (taxtype <= 3)))
    */
  TypoShort taxtype,
  /** Tax rate description. */
  Name name,
  /** Default: nextval('sales.salestaxrate_salestaxrateid_seq'::regclass)
    * Primary key for SalesTaxRate records.
    */
  Defaulted<SalestaxrateId> salestaxrateid,
  /** Default: 0.00
    * Tax rate amount.
    */
  Defaulted<BigDecimal> taxrate,
  /** Default: uuid_generate_v1() */
  Defaulted<TypoUUID> rowguid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public SalestaxrateRow toRow(
                                java.util.function.Supplier<SalestaxrateId> salestaxrateidDefault,
                                java.util.function.Supplier<BigDecimal> taxrateDefault,
                                java.util.function.Supplier<TypoUUID> rowguidDefault,
                                java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault
                              ) {
    return new SalestaxrateRow(salestaxrateid.getOrElse(salestaxrateidDefault), stateprovinceid, taxtype, taxrate.getOrElse(taxrateDefault), name, rowguid.getOrElse(rowguidDefault), modifieddate.getOrElse(modifieddateDefault));
  };
}