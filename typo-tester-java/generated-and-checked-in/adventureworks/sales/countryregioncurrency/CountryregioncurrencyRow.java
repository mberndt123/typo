/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.sales.countryregioncurrency;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.person.countryregion.CountryregionId;
import adventureworks.sales.currency.CurrencyId;

/** Table: sales.countryregioncurrency
  * Cross-reference table mapping ISO currency codes to a country or region.
  * Composite primary key: countryregioncode, currencycode
  */
public record CountryregioncurrencyRow(
  /** ISO code for countries and regions. Foreign key to CountryRegion.CountryRegionCode.
    * Points to {@link adventureworks.person.countryregion.CountryregionRow.countryregioncode}
    */
  CountryregionId countryregioncode,
  /** ISO standard currency code. Foreign key to Currency.CurrencyCode.
    * Points to {@link adventureworks.sales.currency.CurrencyRow.currencycode}
    */
  CurrencyId currencycode,
  /** Default: now() */
  TypoLocalDateTime modifieddate
) {
  static public CountryregioncurrencyRow apply(CountryregioncurrencyId compositeId, TypoLocalDateTime modifieddate) {
           return new CountryregioncurrencyRow(compositeId.countryregioncode(), compositeId.currencycode(), modifieddate);
         };
  public CountryregioncurrencyId compositeId() {
    return new CountryregioncurrencyId(countryregioncode, currencycode);
  };
  public CountryregioncurrencyId id() {
    return compositeId();
  };
  public CountryregioncurrencyRowUnsaved toUnsavedRow(Defaulted<TypoLocalDateTime> modifieddate) {
    return new CountryregioncurrencyRowUnsaved(countryregioncode, currencycode, modifieddate);
  };
}