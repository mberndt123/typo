/**
 * File has been automatically generated by `typo`.
 *
 * IF YOU CHANGE THIS FILE YOUR CHANGES WILL BE OVERWRITTEN.
 */
package adventureworks.sales.currencyrate;

import adventureworks.customtypes.Defaulted;
import adventureworks.customtypes.TypoLocalDateTime;
import adventureworks.sales.currency.CurrencyId;
import java.math.BigDecimal;

/** This class corresponds to a row in table `sales.currencyrate` which has not been persisted yet */
public record CurrencyrateRowUnsaved(
  /** Date and time the exchange rate was obtained. */
  TypoLocalDateTime currencyratedate,
  /** Exchange rate was converted from this currency code.
    * Points to {@link adventureworks.sales.currency.CurrencyRow.currencycode}
    */
  CurrencyId fromcurrencycode,
  /** Exchange rate was converted to this currency code.
    * Points to {@link adventureworks.sales.currency.CurrencyRow.currencycode}
    */
  CurrencyId tocurrencycode,
  /** Average exchange rate for the day. */
  BigDecimal averagerate,
  /** Final exchange rate for the day. */
  BigDecimal endofdayrate,
  /** Default: nextval('sales.currencyrate_currencyrateid_seq'::regclass)
    * Primary key for CurrencyRate records.
    */
  Defaulted<CurrencyrateId> currencyrateid,
  /** Default: now() */
  Defaulted<TypoLocalDateTime> modifieddate
) {
  public CurrencyrateRow toRow(java.util.function.Supplier<CurrencyrateId> currencyrateidDefault, java.util.function.Supplier<TypoLocalDateTime> modifieddateDefault) {
    return new CurrencyrateRow(currencyrateid.getOrElse(currencyrateidDefault), currencyratedate, fromcurrencycode, tocurrencycode, averagerate, endofdayrate, modifieddate.getOrElse(modifieddateDefault));
  };
}